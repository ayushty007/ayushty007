//this code is optimse version of prev. code with time complexcity of o(n)
#include<bits/stdc++.h>
using namespace std ; 
stack<int>st;
int ngr(int arr[],int i,int size)
{ int x =-1;
if(i != size -1 )
{
 st.push(arr[i+1]);
}
while(st.size()!=0)
{
    if(st.top()>arr[i])
    {
        x=st.top();
        break;
    }
    else
    {
        st.pop();
    }
    
}

return x ;
}
int main()
{
    int size = 4 ;
    int arr[size]={1,3,2,4};
    vector<int>vec;
    for(int i =size-1;i>=0;i--)
    {
        vec.push_back(ngr(arr,i,size));
    }
    reverse(vec.begin(),vec.end());
    for(auto it : vec)
    {
        cout<<it<<endl;
    }
    return 0;
}
