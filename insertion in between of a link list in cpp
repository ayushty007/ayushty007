#include<bits/stdc++.h>
using namespace std ;
struct node {
    int data ;
    struct node *next;

};

void print(struct node *ptr)
{
while(ptr!=NULL)           // loop run until ptr points null
{
    cout<<"data value "<< ptr->data<<endl;  // printing data member of head node 
    ptr = ptr->next;  //pointing to next struct i.e second -> then points third -->then next

}
}
struct node * insertatfirst(struct node * head , int data )// passing head node (berfore insertion)
{
struct node * ptr = new node (); //  creating new node 
 ptr->data= data;                //  assigning value to new head
 ptr->next=head;                 //  passing add. of prev. head in new head 
  return ptr ;                   //  returning new head 

}
struct node * insertinbetween(struct node *p ,struct node *x ,int data ) // inserting in between in a link list
{
    struct node *ptr = new node(); // creating a node which stores value has to be inserted 
    while(p!=x) // interate till it reaches the point where new node has to be inserted 
    {
     p = p->next; // simple triversing 
    }
    // now p is pointing at x node 
    ptr->next=p->next; // passing address of node which is next to x ;
    ptr->data= data; // assigning value to the new node 
    return ptr; // returning add. of node which is pointing at element which is next to x
}
int main ()
{

       struct node *head ;      //
     struct node *second ;     //   <--- creating structure using pointer 
      struct node *third ;    //
      struct node *fourth;
       head = new node();      //
     second = new node();     //   <------- memory allocation in heap   
      third = new node();    //
      fourth = new node();

       head->data=7;             // {
       head->next=second;        // 
       second->data=11;          // <--- assigning value in member of pointer stucture (node )
       second->next=third;       //
       third->data=13;           // }
       third->next=fourth;         
       fourth->data=14;             
     
       fourth->next=NULL;         // <--- pointing to end of link list
     
     head = insertatfirst(head , 2); // assigning new value to head


     second->next=insertinbetween(head,second,10); // <-- passing add. of new node 
     // | val | add. |------>>|val1|add1.|
     //    | val | add. |---                     -->>|val1|add1.|
     //                     \                   /    
     //                      \                 /
     //                       |new val.|new add.|        


       print(head);             // printing or triversing link list 
    return 0;
}
